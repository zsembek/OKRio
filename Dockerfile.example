# syntax=docker/dockerfile:1.6

##############################
# Frontend build stage       #
##############################
FROM node:20-alpine AS frontend-build
WORKDIR /frontend
COPY frontend/package.json ./
RUN npm install --frozen-lockfile=false
COPY frontend ./
RUN npm run build

##############################
# Backend runtime image      #
##############################
FROM python:3.11-slim AS backend
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1
WORKDIR /app

RUN apt-get update \
    && apt-get install --no-install-recommends -y build-essential libpq-dev \
    && rm -rf /var/lib/apt/lists/*

COPY backend/pyproject.toml ./
COPY backend/app ./app
RUN pip install --upgrade pip \
    && pip install --no-cache-dir -e .

COPY --from=frontend-build /frontend/dist ./static/frontend

EXPOSE 8000
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

##############################
# Frontend runtime image     #
##############################
FROM nginx:1.25-alpine AS frontend
COPY --from=frontend-build /frontend/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
