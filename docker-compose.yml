version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A app.core.celery_app.celery_app worker -l info
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A app.core.celery_app.celery_app beat -l info
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: okrio
      POSTGRES_USER: okrio
      POSTGRES_PASSWORD: okrio
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U okrio"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_data:
    driver: local
